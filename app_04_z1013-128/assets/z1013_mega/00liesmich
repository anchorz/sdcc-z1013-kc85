;------------------------------------------------------------------------------
; Z1013 MEGA-ROM/FLASH-Modul (2.5M-Modul)
; (c) V. Pohlers 2011
; letzte Änderung 17.02.2017
;------------------------------------------------------------------------------

Software fürs MegaROM, MegaFlash, MegaFRR 
s. http://hc-ddr.hucki.net/wiki/doku.php/z1013:module:megamodul
;------------------------------------------------------------------------------

Zum Selbstkompilieren benötig man
 - den Arnold-Assembler http://john.ccac.rwth-aachen.de:8000/as/
   	Version AS V1.42 Beta [Bld 82] oder aktueller
   	Achtung: ich nutze die Windows-Version asw.exe, umbenannt in as.exe
   	Die DOS-Version läuft unter Windows XP etc. nicht!
 - eine Perl-Installation, z.B. http://www.activestate.com/activeperl
 	Hier sollte die Version egal sein; ich nutze noch v5.14.2

Im Makefile sind die Pfade zu den Programmen as, pbin und perl anzupassen.

assemblieren

	make z80files.inc
	make depend
	make

	make roms		für Megamodul (3 ROMs)
	make flash		für Mega-Flash-Modul (5 ROMs)

testen

	jkcemu 0.9 (www.jens-mueller.org/jkcemu/)
	Konfiguration z1013, 64K RAM, megamodul
	externe Datei f. Megamodul laden

;------------------------------------------------------------------------------
Das perl-Skript create_z80filesinc2.pl erzeugt eine Datei z80files.inc, die
alle gefundenen Z80-Dateien enthält. Diese Liste kann als Quelle genutzt werden,
um die MegaROM-Inhalts-Datei packedroms.asm individuell anzupassen.
Momentan wird einfach die Datei z80files.inc eingefügt.
;------------------------------------------------------------------------------

14.09.2011: erste Alpha-Version:

Ich hatte einfach ein paar Programme zusammengesucht, damit ich die 
Modulsoftware im Emulator testen konnte. Diese Software ist ohne weitere Tests 
zusammengestellt. Die Modulsoftware stellt einen Headerdisk-kompatiblen 
Aufrufrahmen in den Speicher ab BC00h. Ersetzt man in den gewünschten Programmen 
(Tiny-Basic, HC-Basic) die Headersaveaufrufe (entweder via Sprungverteiler oder 
mittels Aufrufrahmen ab 3C00 oder E000) durch die Adressen BCxx, kann man in den 
Programmen mit der normalen (H)LOAD-Funktion Programme laden. Das müsste auch für 
BASIC-Programme gehen. Prinzipiell müsste momentan folgendes funktionieren: 
BASIC laden und starten (initialisieren), beenden und Basic-Programm laden; dann 
zum Basic zurück (Warmstart!).
 
HLOAD/LORUF	call 0FFF1h, 3C00h, E000h	-> call	BC00h
HSAVE/SARUF	call 0FFF4h, 3C03h, E003h	-> call	BC03h

(HSAVE ist mit RET kurzgeschlossen; ein Schreiben ist (noch) nicht implementiert)

06.02.2013: hd_mega3.asm mit erweitertem Filenummernbereich < 999
außerdem mit Mini-Sprungverteiler auf BFFF abwärts 

17.02.2017: kleine Korrektur zum erweiterten Filenummernbereich,
USB-Software, DOC-Ordner

;------------------------------------------------------------------------------
; Laden von Programmen
;------------------------------------------------------------------------------

KC-Basic:
1. KC-BASIC+ m1 laden: @R, Nr. 8
2. Starten (J 300), max. Speicher 48127 , und wieder beenden: BYE
3. Basic-Programm laden: @R
4. Basic-Warmstart: J 302
oder
Basic patchen
call 0FFF1h -> call BC00h: F 100 2 F1 FF -> 14AH: 00, BC, ;
dann mit Basic-Befehl HLOAD Programme laden

Tiny-Basic:
analog
