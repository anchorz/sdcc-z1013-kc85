;   Z 1013;   ------;ROM-LISTING AB ADR.F000;;ANFRAGEN UND HINWEISE;BITTE AN :; G.FISCHER; B/220; ILMENAU 2; 6300	ORG	#F000		JR	INIT1		LD	HL,#004D  	;REGISTERRETTE-		LD	DE,#004E  	;BEREICH LOESCHEN		LD	(HL),#00		LD	BC,#0015		LDIR
		INIT1	LD	SP,#00B0  	;SYSTEM-SP		XOR	A         	;TASTATURSCHALTER		LD	(#0027),A 	;AUF ASCII		LD	A,#C3     	;ABSPRUNG  FUER		LD	(#0020),A 	;BEFEHL RST 20		LD	HL,#F0E8  	;LADEN		LD	(#0021),HL		LD	A,#CF     	;INITIALISIERUNG		OUT	(#03),A   	;PIO PORT B		LD	A,#7F		OUT	(#03),A		LD	HL,#F1F2  	;TAST.-CODE-		LD	DE,#0033  	;TABELLE		LD	BC,#001A  	;LADEN		LDIR
		;MELDUNG AUF BILDSCHIRM		RST	#20		DEFB	2		DEFB	12,13,13		DEFM	"robo"ê		DEFM	"tron"		DEFM	" Z 1"		DEFM	"013/"		DEFM	"2.02"		DEFB	#8D		LD	HL,#90    	;ANWENDER-SP		LD	(#0063),HL		IM	2		JR	KDO2;EING. KDO-MODUSKDO1	LD	SP,#00B0		CALL	PRST7		DEFB	#BF   	;"?"KDO2	CALL	INLIN		LD	DE,(#0016)	;SOIL		CALL	SPACE		LD	B,A       	;B=1.ZEICHEN		INC	DE		LD	A,(DE)		LD	C,A       	;C=2.ZEICHEN		PUSH	BC		INC	DE		CALL	INHEX		JR	NZ,KDO3		LD	A,(DE)		CP	":"		JR	Z,KDO4KDO3	LD	(#001B),HL	;1.PARAMETER		CALL	INHEX		LD	(#001D),HL	;2.PARAMETER		CALL	INHEX		LD	(#0023),HL	;3.PARAMETERKDO4	POP	BC		EX	AF,AF'		LD	(#0025),DE	;ANF. 4.PARA 		LD	HL,TABKDOKDO5	LD	A,(HL)    	;VERGLEICH 1.ZEI.		CP	B        	;MIT TAB-BUCHST.		JR	Z,KDO6    	;Z=1 GEFUNDEN		INC	HL		INC	HL		INC	HL		OR	A         	;TEST AUF TAB.ENDE		JR	NZ,KDO5   	;Z=1 TAB.ENDE		LD	A,B		CP	"@"       	;SONDER-KDO ?		JR	NZ,KDO1   	;Z=0 FEHLER		LD	HL,#00B0  	;TAB. SONDER-KDO		LD	B,C       	;B=2.ZEICHEN		JR	KDO5KDO6	INC	HL		LD	E,(HL)		INC	HL		LD	D,(HL)		EX	DE,HL     	;HL=ADR. NACH BST.		EX	AF,AF'		LD	BC,KDO2   	;RETURN-ADRESSE		PUSH	BC      ;LADEN		JP	(HL)      	;SPRUNG KDO-ROUTINE
	;TAB. KDO-ADRTABKDO	
		DEFB	"A",#C5,#F6		DEFB	"B",#87,#F5		DEFB	"C",#77,#F7		DEFB	"D",#CE,#F4		DEFB	"E",#99,#F5		DEFB	"F",#A2,#F7		DEFB	"G",#B3,#F5		DEFB	"H",#B8,#F6		DEFB	"I",#02,#F0		DEFB	"J",#A5,#F5		DEFB	"K",#0B,#F5		DEFB	"L",#F8,#F3		DEFB	"M",#25,#F3		DEFB	"N",#27,#F7		DEFB	"R",#DF,#F5		DEFB	"S",#69,#F3		DEFB	"T",#1D,#F5		DEFB	"W",#D1,#F6		DEFB	0;EINGANG BEI RST #20		EX	(SP),HL   	;DATENBYTE HINTER		PUSH	AF      ;RST 20 IN (#03)		LD	A,(HL)    	;ABLEGEN UND (SP)		LD	(#0003),A 	;UM 1 ERHOEHEN		INC	HL		POP	AF		EX	(SP),HL
		PUSH	HL		PUSH	BC		PUSH	AF		LD	HL,TABMON		LD	A,(#0003)		SLA	A		LD	C,A		LD	B,#00		ADD	HL,BC     	;HL=TAB.-ADR.		LD	A,(HL)		INC	HL		LD	H,(HL)		LD	L,A      	;HL=ADR. MON.-FKT.		POP	AF		POP	BC		EX	(SP),HL   	;SPRUNG ZUR		RET			  	;MONITOR-FKT.
		
;TAB. ADR MONITOR-FKT.TABMON	
		DEFW	#F21B,#F20C		DEFW	#F2A5,#F2F4		DEFW	#F130,#F2B3		DEFW	#F301,#F31A		DEFW	#F369,#F3F8		DEFW	#F325,#F6D1		DEFW	#F5C7,#F5C4		DEFW	#F5CF,#F51D		DEFW	#F2B9,#F50B		DEFW	#F6B8,3F6C5
		
		INKEY					;BEI	RET A=ASCII		XOR	A		LD	H,A		LD	L,A		CALL	INK9 	;TASTENABFRAGE		JR	NC,INK8   	;C=0 KEINE TASTE		ADD	HL,DE		CALL	INK12 	;RESTL. SPALTEN		LD	C,#44		JR	C,INK1    	;C=1 2.TASTE GEDR.ê		EX	DE,HL		BIT	3,D       	;ABFRAGE ZEILE 3		JR	Z,INK2    	;Z=1 TASTE GEDR.		JR	INK3INK1	BIT	3,D       	;2.TASTE ? ZEILE 3		JR	Z,INK2    	;Z=1 TASTE GEDR.		EX	DE,HL		BIT	3,D       	;1.TASTE ? ZEILE 3		JR	NZ,INK3   	;Z=1 TASTE GEDR.INK2	CALL	INK13   ;WELCHE TASTE IN Z3		PUSH	BC		CALL	INK22   ;SUMMAND HOLEN		POP	BC		JR	Z,INK4    	;Z=0 KEIN SUMM.		EX	DE,HLINK3	CALL	INK22   ;SUMMAND HOLEN		JR	NZ,INK8   	;Z=0 KEIN SUMM.INK4	ADD	A,E		LD	HL,#0027		ADD	A,(HL) 	  	;BERECHNUNG ASCII-WERT ABGESCHLOSSENINK5	LD	HL,#0004  	;SOFTWAREENTPREL-		CP	(HL)      	;LUNG, VERHINDERT		JR	Z,INKEY   	;REPEAT-FUNKTION		LD	B,A		LD	A,(HL)		OR	A		LD	A,B		JR	NZ,INKEY  	;Z=1 VORHER KEINE		LD	(#0004),A 	;TASTE GEDRUECKT		CP	#91       	;(S4/A)		JR	Z,INK6    	;Z=1->ASCII		CP	#17       	;(S4/G)		RET	NZ        	;Z=0 RUECKSPRUNG		LD	A,#80		JR	INK7INK6	XOR	AINK7	LD	(#0027),AINK8	XOR	A         	;RUECKSPRUNG WENN		LD	(#0004),A 	;KEINE TASTE GEDR.		RET	;MIT A=0INK9	LD	E,A       	;E=SPALTENNUMMER		OUT	(#08),A   	;AUSGABE SPALTE		LD	B,#20INK10	IN	A,(#02)		AND	#0F		LD	D,A       	;D=ZEILENNUMMER		IN	A,(#02)		AND	#0F		CP	D		JR	NZ,INK11  	;Z=0 TASTE PRELLT		CP	#0F		RET	NZ        	;Z=0 TASTE GEDR.INK11	DJNZ	INK10INK12	LD	A,E       	;ERHOEH. SPALTEN-		INC	A         	;ZAHL		CP	#08		JR	NZ,INK9   	;Z=0 SPA.-ZAHL <8		RETINK13	LD	A,#01     	;UNTERSUCHUNG		CP	E         	;WELCHE TASTE IN		JR	Z,INK19   	;ZEILE 3 GEDR. IST		JR	NC,INK18  	;E=SPALTENZAHL		ADD	A,#02     	;E=0 ->C=#41		CP	E         	;E=1 ->C=#3E		JR	Z,INK21   	;E=2 ->C=#3B		JR	NC,INK20  	;E=3 ->C=#35		ADD	A,#02     	;E=4 ->A=#08		CP	E         	;E=5 ->A=#20		JR	Z,INK15   	;E=6 ->A=#09		JR	NC,INK16  	;E=7 ->A=#0D		ADD	A,#02		CP	E		JR	Z,INK14		LD	A,#09		JR	INK17INK14	LD	A,#0D		JR	INK17INK15	LD	A,#20		JR	INK17INK16	LD	A,#08INK17	POP	BC		JR	INK5INK18	LD	C,#41		RETINK19	LD	C,#3E		RETINK20	LD	C,#3B		RET
NK21	LD	C,#35		RETINK22	BIT	0,D       	;ABFRAGE ZEILE 0		JR	NZ,INK24  	;Z=0 KEINE TASTEINK23	LD	L,C		LD	H,#00		LD	A,(HL)		RETINK24	INC	C		BIT	1,D       	;ABFRAGE ZEILE 1		JR	NZ,INK25  	;Z=0 KEINE TASTE		JR	INK23INK25	INC	C		BIT	2,D       	;ABFRAGE ZEILE 2		RET	NZ        	;Z=0 KEINE TASTE		JR	INK23
		;TASTATURCODETABELLE;WIRD NACH #033 GELADEN		DEFB	#D0,#07,#10		DEFB	#00,#08,#C3		DEFB	#58,#F0,#60		DEFB	#68,#70,#78		DEFB	#20,#28,#58		DEFB	#30,#38,#40		DEFB	#48,#50,#E0		DEFB	#03,#00,#EC		DEFB	#00,#F0
		
		INCH	
		PUSH	BC		PUSH	DE		PUSH	HLINC1	CALL	INKEY		OR	A		JR	Z,INC1    	;Z=0 TASTE GEDR.		POP	HL		POP	DE		POP	BC		RET
		
		êOUT0	AND	#7FOUTCH					;BRINGT INHALT VON A AN CURSORPOSITION		PUSH	AF		PUSH	BC		PUSH	DE		PUSH	HL		LD	HL,(#002B)	;CURSORPOSITION		PUSH	AF		LD	A,(#001F) 	;ZEICHEN UNTER		LD	(HL),A    	;CURSOR		POP	AFOUT1	CP	#0D       	;ENTER		JR	Z,OUT8		CP	#0C       	;CLS		JR	Z,OUT10		CP	#08       	;CURSOR LINKS		JR	Z,OUT7		CP	#09       	;CURSOR RECHTS		JR	Z,OUT2		LD	(HL),A    	;ZEICHEN IN BWSOUT2	INC	HLOUT3	EX	DE,HLOUT4	LD	HL,(#004B)		XOR	A         	;TEST OB NEUE		SBC	HL,DE     	;CURSORPOS. SCHON		EX	DE,HL     	;AUSSERHALB WINDOW		JR	NZ,OUT6   	;Z=1 SCROLLEN		LD	DE,(#0049)	;SCROLLEN UM		LD	HL,#0020  	;EINE ZEILE IM		ADD	HL,DE     	;WINDOW		LD	BC,(#0047)		LD	A,B		OR	C		JR	Z,OUT5    	;Z=1 KEIN WINDOW		LDIROUT5	PUSH	DE   	;LETZTE ZEILE		POP	HL        	;LOESCHEN		PUSH	HL		INC	DE		LD	(HL),#20		LD	BC,#001F		LDIR		LD	HL,(#0016)		LD	DE,#0020		XOR	A		SBC	HL,DE		LD	(#0016),HL	;SOIL=SOIL-#20		POP	HLOUT6	LD	A,(HL)    	;ZEICHEN UNTER		LD	(#001F),A 	;CURSOR SICHERN		LD	(HL),#FF  	;CURSOR SETZEN		LD	(#002B),HL	;POS. NACH ADR #2B		POP	HL		POP	DE		POP	BC		POP	AF		RETOUT7	DEC	HL		JR	OUT3OUT8	LD	A,#E0		AND	L		ADD	A,#20     	;C=NWB DER POS.		LD	C,A       	;EINE ZEILE TIEFEROUT9	LD	(HL),#20  	;REST DER ZEILE		INC	HL        	;AB ENTER WIRD		LD	A,L       	;GELOESCHT		CP	C		JR	NZ,OUT9		JR	OUT3OUT10	LD	HL,(#0047)	;BILDSCHIRM 		LD	BC,#001F  	;LOESCHEN IM		ADD	HL,BC     	;WINDOW		PUSH	HL		POP	BC		LD	HL,(#0049)		PUSH	HL		LD	(HL),#20		PUSH	HL		POP	DE		INC	DE		LDIR		POP	HL        	;HL=1.POS. IM WIND.		JR	OUT6
		
		PRST7		EX	(SP),HLPRS1	LD	A,(HL)		INC	HL
		PUSH	AF		CALL	OUT0		POP	AF		BIT	7,A		JR	Z,PRS1    	;Z=0 7.BIT GESETZT		EX	(SP),HL		RET
		
		INLIN		CALL	PRST7   ;AUSGABE "#"		DEFB	32,35,#A0INSTR		PUSH	HL		LD	HL,(#002B)		LD	(#0016),HL	;SOIL=1.POSITIONINS1	RST	#20       	;ZEICHEN VON		DEFB	1     	;TASTATUR IN A		RST	#20       	;ZEICHEN VON A		DEFB	0   	;AN CURSORPOSITION		CP	#0D       	;ENTER ?		JR	NZ,INS1   	;Z=0 KEIN ENTER		POP	HL		RET
		
		SPACE		LD	A,(DE)    	;UEBERLIEST		CP	#20       	;FUERENDE FREI-		RET	NZ        	;ZEICHEN		INC	DE        	;A=1.ZEICHEN		JR	SPACE
		KONVX		CALL	SPACE		XOR	A         	;KONVERTIERT LETZTE		LD	HL,#0013  	;4 ZEI. DER ZEI-		LD	(HL),A    	;CHENKETTE UND		INC	HL        	;ADR#13=HEXZAHL		LD	(HL),AKON1	LD	A,(DE)		DEC	HLê		SUB	#30		RET	M         	;M=1 A<#30		CP	#0A		JR	C,KON2    	;C=1 A<#3A		SUB	#07		CP	#0A		RET	M         	;M=1 A<#41		CP	#10		RET	P         	;P=1 A>#46KON2	INC	DE		RLD		INC	HL		RLD		JR	KON1
		
		INHEX		PUSH	BC		CALL	KONVX 	;KONVERTIERUNG		LD	B,H		LD	C,L		LD	L,(HL)		INC	BC		LD	A,(BC)		LD	H,A       	;HL=HEXZAHL		OR	L         	;Z=1 KEINE ZAHL		POP	BC		RET
		
		OUTHX		PUSH	AF		RRA				;HOEHERWERTIGE		RRA				;TETRADE ZURUECK-		RRA				;SCHIEBEN		RRA		CALL	OUX1		POP	AFOUX1	PUSH	AF		AND	#0F       	;INHALT VON A ALS		ADD	A,#30     	;ASCII-ZEICHEN AN		CP	#3A       	;CURSORPOSITION		JR	C,OUX2		ADD	A,#07OUX2	CALL	OUTCH		POP	AF		RET
		
		OUTHL		PUSH	AF      ;AUSGABE HL ALS		LD	A,H       	;VIERSTELLIGE HEX-		CALL	OUTHX 	;ZAHL MIT OUTHX		LD	A,L		CALL	OUTHX		POP	AF		RET
	
	MEM		LD	HL,(#001B)ME1		RST	#20       	;OUTHL		DEFB	7		PUSH	HL		RST	#20       	;OUTSP		DEFB	14		LD	A,(HL)		RST	#20       	;OUTHX		DEFB	6		CALL	INLIN		LD	DE,(#0016)	;SOIL		LD	A,(DE)		EX	AF,AF'		POP	HL		DEC	HLME2		INC	HL		PUSH	HL		CALL	INHEX		JR	Z,ME4     	;Z=1 TRENNZEICHENME3		LD	A,L		POP	HL		LD	(HL),A		CP	(HL)		JR	Z,ME2     	;Z=0 FEHLER		RST	#20       	;PRST7		DEFB	2		DEFM	"ER"		DEFB	#A0		JR	ME1ME4		LD	A,(DE)    	;TEST DATENBYTE=0		CP	#20       	;WENN JA Z=1		JR	Z,ME3		POP	HL
		INC	HL		LD	(#001D),HL	;1.NICHTBEARB. ADR.		CP	#3B		RET	Z         	;RET BEI TASTE";"		EX	AF,AF'		CP	#20		JR	Z,ME1     	;Z=1 KEINE EINGABE		DEC	HL		CP	"R"       	;TEST EINGABE "R"		JR	NZ,ME1    	;Z=1 EINE SPEICHER-		DEC	HL        	;ZELLE ZURUECK		JR	ME1
		
		CSAVE		LD	HL,(#001B)		CALL	SAV2  	;AUSG. 20BYTESSAV1	EX	DE,HL		LD	HL,(#001D)		AND	A		SBC	HL,DE		EX	DE,HL		RET	C         	;C=1 FILE ZU ENDE		CALL	SAV3 	;AUSG. 20#BYTES		JR	SAV1SAV2	LD	DE,(#0033)	;LAENGE HEADER		JR	SAV4SAV3	LD	DE,#000E  	;LAENGE TRENNTONSAV4	LD	B,#70     	;AUSG. VORTONSAV5	DJNZ	SAV5		CALL	SAV21	;UMSCHALTER		DEC	DE		LD	A,E		OR	D		JR	NZ,SAV4		LD	C,#02     	;AUSG. SYNCHRON-SAV6	LD	B,#35     	;IMPULSESAV7	DJNZ	SAV7		CALL	SAV21 	;UMSCHALTER		DEC	Cê		LD	DE,#0000		JR	NZ,SAV6		PUSH	DE      ;DE=IX=0000		POP	IX        	;IX=CHECKSUMME		LD	B,#12SAV8	DJNZ	SAV8		CALL	SAV14 	;AUSG. DE (0000)		LD	B,#0FSAV9	DJNZ	SAV9		LD	C,#10     	;AUSG. 16*2 BYTESSAV10	LD	E,(HL)		INC	HL		LD	D,(HL)		ADD	IX,DE     	;CHECKSUMME BILDEN		INC	HL		PUSH	BC		CALL	SAV14 	;AUSG. DE (DATEN)		POP	BC		DEC	C		JR	Z,SAV12   	;Z=1 FERTIG		LD	B,#0ESAV11	DJNZ	SAV11		JR	SAV10SAV12	PUSH	IX		POP	DE        	;DE=CHECKSUMME		LD	B,#10SAV13	DJNZ	SAV13		CALL	SAV14  	;AUSG. CHECKSUMME		RETSAV14	LD	C,#10     	;AUSG. REG. DESAV15	SRL	D		RR	E		JR	NC,SAV17  	;C=1 BIT=1		LD	B,#03SAV16	DJNZ	SAV16		NOP		JR	SAV18SAV17	CALL	SAV21	;UMSCHALTERSAV18	LD	B,#19SAV19	DJNZ	SAV19		CALL	SAV21  	;UMSCHALTER		DEC	C		RET	Z         	;Z=1 FERTIG		LD	B,#15SAV20	DJNZ	SAV20		JR	SAV15SAV21	IN	A,(#02)   	;SCHALTET 7.BIT AN		XOR	#80       	;PORT B UM		OUT	(#02),A		RET
		
		CLOAD		LD	HL,(#001B)LOA1	CALL	LOA3    ;LADEN 20#BYTES		JR	Z,LOA2    	;Z=0 LADEFEHLER		CALL	PRST7		DEFM	"CS"		DEFB	#BC		CALL	OUTHL		CALL	OUTSPLOA2	EX	DE,HL		LD	HL,(#001D)		AND	A		SBC	HL,DE		EX	DE,HL		RET	C         	;C=1 FERTIG		JR	LOA1;VORTONLOA3	CALL	LOA24   ;B=ALOA4	CALL	LOA25   ;FLANKE ABWARTEN		LD	C,#07LOA5	LD	DE,#0910		LD	A,#07LOA6	DEC	A		JR	NZ,LOA6		CALL	LOA24   ;B=ALOA7	CALL	LOA24   ;FLANKE ?		JR	NZ,LOA3   	;Z=0 JA		DEC	D		JR	NZ,LOA7		DEC	C		JR	Z,LOA9LOA8	IN	A,(#02)		XOR	B		BIT	6,A		JR	NZ,LOA5		DEC	E		JR	NZ,LOA8		JR	LOA3
;SYNCHRONIMPULSELOA9	CALL	LOA25   ;FLANKE ABWARTEN		LD	A,#44LOA10	DEC	A		JR	NZ,LOA10		CALL	LOA24   ;FLANKE ?		JR	NZ,LOA9   	;Z=0 JA		CALL	LOA25   ;FLANKE ABWARTEN		LD	A,#1ELOA11	DEC	A		JR	NZ,LOA11;2 BYTES (00 00) LADEN		CALL	LOA19   ;LADEN REG. DE;20# BYTES (DATEN) LADEN		LD	C,#10		PUSH	DE      ;DE=IX=0000		POP	IX        	;IX=CHECKSUMME		LD	A,#1ALOA12	DEC	A		JR	NZ,LOA12LOA13	CALL	LOA19   ;LADEN REG. DE		ADD	IX,DE     	;CHECKSUMME BILDEN		PUSH	BC		LD	C,L		LD	B,H		LD	HL,(#001D)		XOR	A		SBC	HL,BC		LD	L,C		LD	H,B		POP	BC		JR	C,LOA14   	;C=1 ENDE ERREICHT		LD	(HL),E		INC	HL		LD	(HL),D		JR	LOA16LOA14	LD	A,#01LOA15	DEC	A		JR	NZ,LOA15ê		INC	HLLOA16	INC	HL		DEC	C		JR	Z,LOA18   	;Z=1 BLOCKENDE		LD	A,#12LOA17	DEC	A		JR	NZ,LOA17		JR	LOA13LOA18	LD	A,#12LOA27	DEC	A		JR	NZ,LOA27		CALL	LOA19   ;LADEN CHECKSUMME		EX	DE,HL		PUSH	IX		POP	BC		XOR	A		SBC	HL,BC     	;VERGL. CHECKSUMME		EX	DE,HL     	;Z=0 LADEFEHLER		RET;LADEN DES REG. DELOA19	PUSH	HL		LD	L,#10LOA20	CALL	LOA24   ;FLANKE ?		JR	NZ,LOA21  	;Z=0 JA		XOR	A         	;CARRY=0		JR	LOA22LOA21	SCFLOA22	RR	D		RR	E		CALL	LOA25   ;FLANKE ABWARTEN		DEC	L		JR	Z,LOA23   	;Z=1 DE GELADEN		LD	A,#1ELOA26	DEC	A		JR	NZ,LOA26		JR	LOA20LOA23	POP	HL		RETLOA24	IN	A,(#02)   	;ABFRAGE PORT B		XOR	B         	;Z=0 FLANKENSPRUNG		BIT	6,A		PUSH	AF		XOR	B		LD	B,A       	;B=A		POP	AF		RETLOA25	IN	A,(#02)		XOR	B		BIT	6,A		JR	Z,LOA25   	;Z=0 FLANKENSPRUNG		RET
		
		
		
D-KDO		LD	HL,(#001B)DKO1	LD	DE,(#001D)		SCF		PUSH	HL		SBC	HL,DE		POP	HL		RET	NC        	;C=1 ANFANG < ENDE		RST	#20       	;OUTHL		DEFB	7		LD	BC,#0800		LD	E,#00DKO2	RST	#20       	;PRST7		DEFB	2,#A0		LD	A,(HL)		RST	#20       	;OUTHX		DEFB	6		ADD	A,C       	;CHECKSUMME BILDEN		LD	C,A		JR	NC,DKO3		LD	A,#00		ADC	A,E		LD	E,A       	;EC=CKECKSUMMEDKO3	INC	HL		DJNZ	DKO2		RST	#20       	;PRST7		DEFB	2,#A0		LD	A,E		CALL	OUX1    ;AUSG. CHECKSUMME		LD	A,C		RST	#20       	;AUSG. CHECKSUMME		DEFB	6		JR	DKO1		PARA		LD	HL,(#001B)		LD	DE,(#001D)
		LD	BC,(#0023)		RET		K-KDO		CALL	PARA		LD	(HL),C    	;C=FUELLBYTE		PUSH	HL		XOR	A		EX	DE,HL		SBC	HL,DE		LD	B,H		LD	C,L       	;BC=LAENGE		POP	HL		LD	D,H		LD	E,L		INC	DE        	;DE=HL+1		LDIR		RET		T-KDO		CALL	PARA		XOR	A		PUSH	HL		SBC	HL,DE		POP	HL		JR	C,TKO1    	;C=1 ZIEL > QUELLE		LDIR			;TRANS. VORWAERTS		RETTKO1	ADD	HL,BC     	;RUECKWAERTS		EX	DE,HL		ADD	HL,BC		EX	DE,HL		DEC	HL		DEC	DE		LDDR		RET		REGA		LD	(#0013),SPê		LD	SP,#0061		PUSH	IX      ;REG. INHALTE		PUSH	IY      ;ABLEGEN IM RETTE-		PUSH	AF      ;BEREICH		PUSH	BC		PUSH	DE		PUSH	HL		EXX		EX	AF,AF'		PUSH	AF		PUSH	BC		PUSH	DE		PUSH	HL		JR	REG1		REGH		LD	(#0013),SP		LD	SP,#004D		POP	HL        	;REG. INHALTE		POP	DE        	;HOLEN AUS RETTE-		POP	BC        	;BEREICH		POP	AF		EXX		EX	AF,AF'		POP	HL		POP	DE		POP	BC		POP	AF		POP	IY		POP	IXREG1	LD	SP,(#0013)		RET;EINSPRUNG BEI BREAKBRE1		CALL	REGA    ;REG. ABLEGEN		POP	HL        	;HL=BREAK-ADR. +3		LD	(#0063),SP	;ANW.-SP ABLEGEN		LD	SP,#00B0  	;SYSTEM-SP		DEC	HL		DEC	HL		DEC	HL		LD	(#0061),HL	;ZWSP. - PC		LD	DE,(#000B)	;DIE ALTEN 3 BYTES		LD	HL,#000D  	;ZURUECKBRINGEN		LD	BC,#0003		LDIR		CALL	REGDA   ;DARST. REGISTER		JP	KDO2      	;KDO-SCHLEIFE		B-KDO		LD	HL,(#001B)		LD	(#000B),HL	;ZWSP. BREAK-ADR.		LD	DE,#000D  	;3 BYTES BEFEHLS-		LD	BC,#0003  	;CODE IN ZELLE		LDIR			;#0D ... ABLEGEN		CALL	REGDA   ;DARST. REGISTER		RET		E-KDO		LD	HL,(#000B)		LD	(HL),#CD  	;LAEDT AN BREAK-ADR		INC	HL        	;DEN BEFEHL		LD	DE,#F564  	;CALL BRE1		LD	(HL),E		INC	HL		LD	(HL),D		J-KDO		LD	HL,(#001B)	;HL=STARTADR.		LD	(#0061),HL	;NACH ZWSP. - PC		LD	SP,(#0063)	;ANW.-SP LADEN		PUSH	HL      ;STARTADR IN STACK		JP	REGH		G-KDO		LD	HL,(#0061)		LD	(#001B),HL	;PARA1 = PC		LD	DE,(#000B)		XOR	A		SBC	HL,DE		JR	NZ,E-KDO  	;Z=1 PC=BREAKADR.		JR	J-KDO		OUTDP		RST	#20       	;AUSG. ":"		DEFB	2,#BAOTHLS		LD	A,(HL)    	;A=HWB
		RST	#20       	;OUTHX		DEFB	6		DEC	HL		LD	A,(HL)    	;A=NWB		RST	#20       	;OUTHX		DEFB	6		DEC	HLOUTSP		RST	#20       	;AUSG. FREIZEICHEN		DEFB	2,#A0		RETAUS1	RST	#20		DEFB	2,#31,#A0		RETAUSX	JR	NZ,AUS1   	;Z=1 AUSG. "0"AUS0	RST	#20		DEFB	2,#30,#A0		RET		R-KDO		CP	":"		JP	NZ,RKO3   	;Z=1 ANZEIGE REG.REGDA	RST	#20      	;"BP"		DEFB	2,#0D,#42,#D0		LD	HL,#000C  	;(HL-1)=BREAKADR.		RST	#20       	;OUTDP		DEFB	13		RST	#20       	;"BS:"		DEFB	2,#42,#53,#BA		LD	B,#03     	;AUSG. MC-FOLGE		LD	HL,#000D  	;AN BREAKADR.RKO1	LD	A,(HL)		RST	#20       	;OUTHX		DEFB	6		INC	HL		DJNZ	RKO1		RST	#20       	;PRST7ê		DEFB	2		DEFM	"   S"		DEFM	" Z C"		DEFB	#A0		LD	A,(#005B) 	;REG. F		LD	L,A		BIT	7,L		CALL	AUSX    ;AUSG. S - FLAG		BIT	6,L		CALL	AUSX    ;AUSG. Z - FLAG		BIT	0,L		CALL	AUSX    ;AUSG. C - FLAG		LD	HL,#0064		LD	B,#02		RST	#20       	;"SP"RKO2	DEFB	2,#53,#D0		RST	#20		DEFB	13		RST	#20       	;"PC"		DEFB	2,#50,#C3		RST	#20		DEFB	13		RST	#20       	;"IX"		DEFB	2,#49,#D8		RST	#20		DEFB	13		RST	#20       	;"IY"		DEFB	2,#49,#D9		RST	#20		DEFB	13RKO4	RST	#20       	;"AF"		DEFB	2,#41,#C6		RST	#20		DEFB	13		RST	#20       	;"BC"		DEFB	2,#42,#C3		RST	#20		DEFB	13		RST	#20       	;"DE"		DEFB	2,#44,#C5		RST	#20		DEFB	13		RST	#20       	;"HL"		DEFB	2,#48,#CC		RST	#20		DEFB	13		DJNZ	RKO4    ;2. REGISTERSATZ		LD	HL,(#002B)		DEC	HL		LD	(HL),#27  	;AUSG. "'"		RETRKO3	LD	BC,#0400		LD	HL,(#0016)	;SOIL		INC	HL		INC	HL		LD	DE,RKO2 +1RKO5	LD	A,(DE)    	;VERGL. REG.-EING.		CP	(HL)      	;MIT ALLEN REG.		JR	Z,RKO8    	;Z=1 GEFUNDEN		INC	DERKO6	PUSH	HL		LD	HL,#0005		ADD	HL,DE		EX	DE,HL		POP	HL		INC	C         	;C=NR. DES REG.		DJNZ	RKO5		LD	B,#04		LD	A,C		CP	#08       	;Z=1 FEHLEINGABE		JR	NZ,RKO5   	;Z=0 WEITERSUCHEN		POP	AF		RST	#38       	;KDO1RKO7	DEC	HL		JR	RKO6RKO8	INC	DE		INC	HL		LD	A,(DE)		AND	#7F		CP	(HL)      	;PRUEF. 2.BUCHST.		JR	NZ,RKO7   	;Z=0 FALSCH		INC	HL		LD	A,(HL)		CP	"'"       	;EING "'" ?		LD	A,C       	;A=REG.NR.		JR	NZ,RKO9   	;Z=0 KEIN RG'		ADD	A,#04     	;A=A+4RKO9	SLA	A         	;A=A*2		LD	C,A
		LD	B,#00		LD	HL,#0064		SBC	HL,BC		LD	B,H       	;HL=ZWSP.-ADR.		LD	C,L       	;D. GESUCHTEN REG.		RST	#20       	;OTHLS		DEFB	12		CALL	INLIN   ;EINGABE		LD	DE,(#0016)	;SOIL		CALL	INHEX   ;HL=EINGEG. ZAHL		JR	NZ,RKO10  	;Z=1 KEINE ZAHL		LD	A,(DE)		CP	";"       	;EING. ";" ?		RET	Z         	;Z=0 HL=0000RKO10	EX	DE,HL		PUSH	BC		POP	HL        	;HL=ZWSP. DES REG.		LD	(HL),D    	;AENDERUNG DES ZWSP		DEC	HL        	;MIT EINGEG. ZAHL		LD	(HL),E		JP	REGDA		H-KDO		LD	HL,#5048  	;AENDERUNG DER		LD	(#0042),HL	;TASTATURCODETAB.		LD	HL,#3830		LD	(#0045),HL		RET		A-KDO		LD	HL,#F1F4  	;LADEN DER ALTEN		LD	DE,#0033  	;TASTATURCODETAB.		LD	BC,#0012		LDIR		RET		W-KDO		CALL	WKO1    ;KONTR. EINGABE		JR	C,WKO3    	;C=1 FEHLEINGABE		LD	(#0047),HL	;FREIE POS. -20Hê		LD	(#0049),BC	;1.FREIE POS.		LD	HL,(#001D)		LD	(#004B),HL	;1.POS. NACH WINDOW		LD	HL,(#002B)		LD	(HL),#20  	;CURSOR LOESCHEN		LD	(#002B),BC	;NEUE CURSORPOS.		RETWKO1	LD	A,(#001C)		CP	#EC       	;ANFANG < EC00 ?		RET	C         	;C=1 FEHLEINGABE		LD	A,(#001B)		AND	#E0       	;1.WINDOWPOS. AUF		LD	(#001B),A 	;ZEILENANFANG		LD	A,(#001D)		AND	#E0       	;1.POS. AUSSERHALB		LD	(#001D),A 	;AUF ZEILENANFANG		LD	HL,(#001D)		LD	BC,(#001B)		SBC	HL,BC     	;ENDADR.< ANFADR ?		RET	C         	;C=1 FEHLEINGABE		JR	Z,WKO2    	;Z=1 FEHLEINGABE		DEC	HL		LD	A,#03		CP	H         	;WINDOW ZU GROSS ?		RET	C         	;C=1 JA		INC	HL		LD	DE,#0040		SBC	HL,DE     	;WINDOW ZU KLEIN ?		RET	C         	;C=1 JA		LD	DE,#0020		ADD	HL,DE		RETWKO2	SCF		RETWKO3	POP	AF		RST	#38       	;KDO1		NKTA		DEFB	#FE,#97,#DFN-KDO		LD	A,#F7		LD	I,A       	;INTERRUPTVEKTOR		DI		LD	HL,NKTA   	;NEUE INIT. PORT B		LD	BC,#0303  	;LOEST SELBSTAENDIG		OTIR			;INTERRUPT AUS		LD	HL,(#000B)	;1 BYTE VOR BREAK-		DEC	HL        	;ADR. WIRD DER		LD	A,(HL)    	;BEFEHL "EI" 		LD	(#0069),A 	;GELADEN UND PRO-		LD	(HL),#FB  	;GRAMM DORT GESTAR-		LD	(#006A),SP	;TET,NACH 1 BEFEHL		LD	SP,(#0063)	;KOMMT INTERRUPT		PUSH	HL		JP	REGH		;EINGANG INTERRUPT		DI		CALL	REGA		LD	A,#07     	;INTERRUPTMOEGL.		OUT	(#03),A   	;ABGESCHALTET		LD	HL,(#000B)	;BEFEHL "EI" WIRD		DEC	HL        	;DURCH ALTES BYTE		LD	A,(#0069) 	;ERSETZT		LD	(HL),A		POP	HL        	;HL=NEUE BREAKADR.		LD	(#000B),HL		LD	(#0061),HL	;ZWSP - PC		LD	(#0063),SP	;ZWSP ANW.-SP		LD	SP,(#006A)	;SYSTEM-SP		LD	DE,#000D  	;NEUE OPERANDEN-		LD	BC,#0003  	;FOLGE ABLADEN		LDIR		LD	HL,REGDA		PUSH	HL		RETI			;SPRUNG ZU REGDAC-KDO		CALL	PARACKO1	LD	A,(DE)		CP	(HL)		JR	NZ,CKO3   	;Z=1 (DE)=(HL)CKO2	DEC	BC		INC	HL		INC	DE		LD	A,B		OR	C		RET	Z         	;Z=1 FERTIG		JR	CKO1
CKO3	RST	#20       	;OUTHL		DEFB	7		RST	#20       	;OUTSP		DEFB	14		LD	A,(HL)		RST	#20       	;OUTHX		DEFB	6		RST	#20       	;OUTSP		DEFB	14		EX	DE,HL		RST	#20       	;OUTHL		DEFB	7		RST	#20       	;OUTSP		DEFB	14		EX	DE,HL		LD	A,(DE)		RST	#20       	;OUTHX		DEFB	6		RST	#20       	;PRST7		DEFB	2,#8D		RST	#20       	;INCH		DEFB	1		CP	13        	;"ENTER" ?		RET	NZ        	;Z=1 JA, WEITER		JR	CKO2F-KDO		LD	DE,(#0025)	;EING. AB 4.PARA		DEC	DE		DEC	DE		LD	(#0023),DE		LD	BC,(#001B)	;BC=1.ZELLEFKO1	LD	DE,(#0023)		RST	#20       	;INHEX		DEFB	3FKO2	LD	A,(BC)		CP	L         	;L=GESUCHTES BYTE		JR	Z,FKO3    	;Z=1 BYTE GEFUNDEN		INC	BCê		LD	A,B		OR	C		JR	Z,FKO7    	;Z=0 WEITERSUCHEN		JR	FKO2FKO3	PUSH	BC		PUSH	DE		LD	DE,(#001D)	;ANZ. GES. BYTES		DEC	DE		LD	(#006C),DE	;ZWSP		INC	BCFKO4	LD	A,D		OR	E		POP	DE		JR	Z,FKO5    	;Z=1 BYTEFOLGE GEF.		RST	#20       	;INHEX		DEFB	3		LD	A,(BC)		CP	L         	;L=GESUCHTES BYTE		JR	NZ,FKO6   	;Z=0 NICHT GEFUNDEN		PUSH	DE		LD	DE,(#006C)	;ZWSP ANZAHL DER		DEC	DE        	;GESUCHTEN BYTES		LD	(#006C),DE	;UM 1 VERRINGERN		INC	BC		JR	FKO4      	;WEITERSUCHENFKO5	POP	BC        	;BYTEFOLGE GEFUNDEN		LD	(#001B),BC	;BC=ADR. 1.BYTE		JP	MEMFKO6	POP	BC		INC	BC		JR	FKO1FKO7	RST	#20       	;PRST7		DEFB	2		DEFM	"NOT "		DEFM	"FOUN"		DEFB	"D",#8D		RET		;ZEIGER FUER INTERRUPT	DEFW	#F74A