;******************************
;* BETRIEBSSYSTEM FÃœR  Z 1013 *
;* VERSION 1.2, (Verwaltung)  *
;* DIRK AMBRAS , 23.11.1989   *
;******************************
;
	ORG	08000H
BEGIN:	JMP	CAOS
	JMP	PRNST
	JMP	PRKEY
	JMP	PKEY
	JMP	ERR1
	JMP	ZLEN
CAOS:	LD	A,(JPM)
;
BSST:	EQU	0EB00H
JPM:	EQU	BSST+0FFH
AME:	EQU	BSST
DATA:	EQU	BSST+1
HLM:	EQU	01BH
DEM:	EQU	01DH
BCM:	EQU	023H
MEMA:	EQU	BSST+16
MEMHL:	EQU	BSST+17
MEMDE:	EQU	BSST+19
FLAG:	EQU	BSST+21
MEBL:	EQU	BSST+22
KEYTA:	EQU	BSST+23
R20:	EQU	0F0E8H
R38:	EQU	0F058H
FKZ:	EQU	18
STMEB:	EQU	06DH
PDR:	EQU	050H
PFL:	EQU	052H
;
	CMP	0BBH
	JPZ	R38
	CMP	0EEH
	JRZ	WST-#
	LD	SP,0B0H
	LD	HL,BSST
	LD	DE,BSST+1
	LD	BC,0FFH
	LD	M,L
	LDIR
	LD	DE,KEYTA
	LD	HL,MKEY
	LD	BC,EKEY-MKEY
	LDIR
	LD	BC,001FBH
LIVE:	CALL	GTON
	LD	A,B
	ADD	4
	LD	B,A
	LD	A,C
	SUB	45
	LD	C,A
	JRNC	LIVE-#
	LD	A,STMEB
	LD	(MEBL),A
	LD	A,1
	LD	(FLAG),A
WST:	LD	SP,0B0H
	CALL	ADRM
	JMP	MENU
SUCH:	LD	A,(FLAG)
	BIT	3,A
	JRNZ	MOLD-#
	LD	HL,CAOS
	LD	BC,0
SH2:	LD	A,(MEBL)
SH1:	CPIR
	JPPO	SRET
	CPI
	JRNZ	SH1-#
	CALL	SUCH2
	LD	DE,CRL
	CALL	PRNST
	JR	SH2-#
SRET:	RET
SUCH2:	LD	A,M
	CMP	32
	JRC	MNPR-#
	LD	A,(FLAG)
	AND	3
	CMP	3
	JRZ	ALL-#
	CMP	2
	JRZ	KLBD-#
	LD	A,M
	CMP	030H
	JRC	WEG-#
	CMP	060H
	JRNC	WEG-#
	JR	PRA-#
KLBD:	LD	A,M
	CMP	'0'
	JRC	WEG-#
	CMP	080H
	JRNC	WEG-#
	CMP	060H
	JRNC	PRA-#
	CMP	040H
	JRC	PRA-#
WEG:	LD	DE,MSHW
	JMP	PRNST
ALL:	LD	E,M
	CALL	ZSFR
	CMP	E
	JRNC	WEG-#
	LD	A,E
PRA:	RST	020H
	DB	0
	INC	HL
	DEC	BC
	JR	SUCH2-#
MOLD:	LD	HL,0B0H
MO2:	LD	A,M
	CMP	32
	RC
	LD	A,'@'
	RST	020H
	DB	0
	LD	A,M
	RST	020H
	DB	0
	INC	HL
	LD	A,(FLAG)
	BIT	2,A
	JRNZ	MOPR-#
	INC	HL
MOE:	INC	HL
	LD	DE,CRL
	CALL	PRNST
	JR	MO2-#
MOPR:	LD	E,M
	INC	HL
	LD	D,M
	PUSH	HL
	PUSH	DE
	LD	DE,KEYM2
	CALL	PRNST
	POP	HL
	RST	020H
	DB	7
	POP	HL
	JR	MOE-#
MNPR:	LD	A,(FLAG)
	BIT	2,A
	RZ
	INC	HL
	LD	A,13
	RST	020H
	DB	0
	LD	A,11
	RST	020H
	DB	0
	PUSH	HL
	LD	HL,(02BH)
	LD	DE,12
	ADD	HL,DE
	LD	(02BH),HL
	POP	HL
	RST	020H
	DB	7
	DEC	BC
	RET
INPUT:	CALL	INLIN
	EX	DE,HL
	INC	DE
ENT:	LD	A,(DE)
	CALL	PDOWN
	CMP	32
	JPZ	RET
	CALL	PSUCH
	JRC	PROG-#
	CALL	ERR2
	JMP	RET
PROG:	INC	DE
	LD	(HLM),DE
	PUSH	HL
	XOR	A
	LD	(AME),A
	LD	HL,DATA
	LD	(MEMDE),HL
PARA:	LD	A,(DE)
	CMP	32
	JRZ	GPARA-#
	RST	020H
	DB	3
	JRC	PTXT-#
PARA2:	PUSH	DE
	EX	DE,HL
	LD	HL,(MEMDE)
	LD	M,E
	INC	HL
	LD	M,D
	INC	HL
	LD	(MEMDE),HL
	LD	A,(AME)
	INC	A
	CMP	8
	LD	(AME),A
	POP	DE
	JPNC	ERROR
	INC	DE
	JR	PARA-#
PDOWN:	PUSH	AF
	CALL	ZSFR
	CMP	32
	JRNZ	PDE-#
	POP	AF
	RES	7,A
	RET
PDE:	POP	AF
	RET
PTXT:	LD	A,0FFH
	LD	(AME),A
	LD	HL,(HLM)
	LD	(DATA),HL
GPARA:	POP	HL
GOUT:	LD	DE,RET
	PUSH	DE
	PUSH	HL
	LD	HL,(DATA)
	LD	(HLM),HL
	LD	DE,(DATA+2)
	LD	(DEM),DE
	LD	BC,(DATA+4)
	LD	(BCM),BC
	LD	A,(AME)
	RET
LARG:	LD	HL,(HLM)
	LD	DE,(DEM)
	LD	BC,(BCM)
	RET
PSUCH:	LD	A,(DE)
	LD	(MEMDE),DE
	CALL	PDOWN
	CMP	'@'
	JRNZ	F7F-#
	INC	DE
	LD	A,(DE)
	CALL	PDOWN
	LD	HL,0B0H
	LD	B,26
PS1:	CMP	M
	JRZ	FOU1-#
	INC	HL
	INC	HL
	INC	HL
	DJNZ	PS1-#
NFOU:	SCF
	CCF
	RET
FOU:	SCF
	RET
FOU1:	INC	DE
	LD	A,(DE)
	CALL	PDOWN
	CMP	32
	JRNZ	FOU1-#
	PUSH	DE
	INC	HL
	LD	E,M
	INC	HL
	LD	D,M
	EX	DE,HL
	POP	DE
	JR	FOU-#
F7F:	LD	BC,0FFF0H
	LD	HL,CAOS
	LD	(MEMDE),DE
NF3:	LD	A,(MEBL)
	LD	DE,(MEMDE)
NF2:	CPIR
	JPPO	NFOU
	CPI
	JRNZ	NF2-#
FO3:	LD	A,(DE)
	CALL	PDOWN
	CMP	32
	JRZ	FOU2-#
	CMP	M
	JRNZ	NF3-#
	INC	DE
	INC	HL
	DEC	BC
	JR	FO3-#
FOU2:	LD	A,M
	INC	HL
	CMP	2
	JRNC	FOU2-#
	JR	FOU-#
RET:	LD	SP,0B0H
	LD	A,'%'
	RST	020H
	DB	0
	JMP	INPUT
ERROR:	CALL	ERR1
	JR	RET-#
ERR1:	LD	DE,ERM1
	JMP	PRNST
ERR2:	LD	DE,ERM2
	JMP	PRNST
AHEX:	PUSH	AF
	RRA
	RRA
	RRA
	RRA
	CALL	AHEX2
	POP	AF
AHEX2:	AND	00FH
	ADD	030H
	CMP	03AH
	JRC	ADR-#
	ADD	7
ADR:	RST	020H
	DB	0
	RET
HLHEX:	LD	A,H
	CALL	AHEX
	LD	A,L
	JR	AHEX-#
OTHLS:	LD	A,M
	DEC	HL
	LD	L,M
	LD	H,A
	CALL	HLHEX
OUTSP:	LD	A,' '
	RST	020H
	DB	0
	RET
OUTDP:	LD	A,':'
	RST	020H
	DB	0
	JR	OTHLS-#
ADRM:	LD	HL,VKEY
	LD	(021H),HL
	LD	HL,RET
	LD	(039H),HL
	LD	HL,KEYS
	LD	(03BH),HL
	LD	HL,KEYTA
	LD	(03DH),HL
	LD	HL,LSON
	LD	(041H),HL
	LD	HL,SONK
	LD	(043H),HL
	LD	HL,SONKT
	LD	(045H),HL
	RET
RHEX:	LD	HL,0
	LD	(MEMHL),HL
	XOR	A
	LD	HL,MEMA
	LD	M,A
RHEX1:	LD	A,(DE)
	CALL	PDOWN
	CMP	32
	JRZ	REXT-#
	CMP	','
	JRNZ	RHEX2-#
	INC	DE
	LD	A,(DE)
	INC	M
	INC	M
	PUSH	AF
	AND	0F0H
	RRA
	RRA
	RRA
	RRA
	INC	HL
	CALL	ROT
	POP	AF
	CALL	ROT
	INC	DE
	JR	RHEND-#
REXT:	LD	A,M
	CMP	1
	RET
RHEX2:	SUB	030H
	RC
	CMP	10
	JRC	RH3-#
	SUB	7
	CMP	10
	RC
	CMP	16
	JRC	RH3-#
	SUB	32
	CMP	10
	RC
	CMP	16
	JRC	RH3-#
	SCF
	RET
RH3:	INC	DE
	INC	M
	INC	HL
	CALL	ROT
RHEND:	DEC	HL
	LD	A,M
	CMP	5
	JRC	RHEX1-#
	DEC	DE
	SCF
	RET
ROT:	RLD
	INC	HL
	RLD
	DEC	HL
	RET
INHEX:	CALL	RHEX
	LD	HL,(MEMHL)
	RET
INLIN:	LD	HL,(02BH)
	LD	(016H),HL
ILC:	RST	020H
	DB	1
	RST	020H
	DB	0
	PUSH	AF
	LD	A,(FLAG)
	LD	HL,(016H)
	CALL	ZLEN
	BIT	5,A
	JRZ	NPD-#
	ADD	HL,BC
NPD:	BIT	6,A
	JRZ	NOPS-#
	OR	A
	SBC	HL,BC
NOPS:	POP	AF
	CMP	13
	JRNZ	ILC-#
	CALL	ZLEN
	OR	A
	LD	HL,(02BH)
	SBC	HL,BC
	LD	(DATA+14),HL
	RET
INLM:	LD	A,'%'
	RST	020H
	DB	0
	JR	INLIN-#
VKEY:	LD	(MEMA),A
	LD	(MEMDE),HL
	POP	HL
	LD	A,M
	INC	HL
	PUSH	HL
	CMP	013H
	JRNC	NRM-#
	LD	HL,MFKT
	PUSH	BC
	LD	B,0
	LD	C,A
	ADD	HL,BC
	ADD	HL,BC
	LD	C,M
	INC	HL
	LD	H,M
	LD	L,C
	POP	BC
	PUSH	HL
NRM:	LD	HL,(MEMDE)
	LD	A,(MEMA)
	RET
VMON:	POP	HL
	DEC	HL
	PUSH	HL
	LD	HL,(MEMDE)
	JMP	R20
TRANS:	CALL	LARG
	LDIR
	RET
DRAKK:	CMP	01EH
	JRNZ	DOUT-#
	LD	A,10
	CALL	DOUT
	LD	A,13
DOUT:	OR	A
	JRNZ	DNUL-#
	LD	A,32
DNUL:	PUSH	AF
	PUSH	BC
BUSY:	IN	PFL
	BIT	0,A
	JRNZ	BUSY-#
	LD	B,030H
KWAS:	IN	PFL
	BIT	0,A
	JRNZ	BUSY-#
	DJNZ	KWAS-#
	POP	BC
	POP	AF
	OUT	PDR
	RET
DRKEY:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	B,A
	LD	HL,027H
	BIT	3,M
	JRZ	NOTP-#
	CALL	MT81
NOTP:	LD	A,(FLAG)
	AND	09FH
	LD	(FLAG),A
	CALL	ZSFR
	LD	A,B
	JRZ	PAST-#
	CMP	8
	JRZ	STJP-#
	CMP	9
	JRZ	STJP-#
	CMP	12
	JRZ	STJP-#
	CMP	13
	JRZ	STJP-#
NKEY2:	CALL	ZSET
NKEY:	LD	A,(MEMA)
	POP	BC
	POP	DE
	POP	HL
	RET
PAST:	CMP	32
	JRNC	NKEY2-#
STJP:	JMP	STCOD
ZSET:	LD	A,(FLAG)
	BIT	4,A
	JRNZ	NINS-#
	BIT	7,A
	JRZ	NINS-#
	CALL	ST1A
NINS:	LD	HL,(02BH)
	LD	A,(MEMA)
	LD	M,A
	JMP	ST09
PRST7:	EX	(SP),HL
WPR7:	LD	A,M
	AND	07FH
	RST	020H
	DB	0
	LD	A,M
	INC	HL
	BIT	7,A
	JRZ	WPR7-#
	EX	(SP),HL
	RET
PRNST:	LD	A,(DE)
	OR	A
	RZ
	RST	020H
	DB	0
	INC	DE
	JR	PRNST-#
PRKEY:	LD	A,(DE)
	OR	A
	RZ
	CALL	PKEY
	INC	DE
	INC	C
	JR	PRKEY-#
PKEY:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	(MEMA),A
	LD	HL,027H
	BIT	3,M
	JRZ	PNPR-#
	CMP	32
	JRNC	PKOK-#
	LD	A,'.'
PKOK:	CALL	MT81
PNPR:	CALL	ZSET
	POP	BC
	POP	DE
	POP	HL
	RET
KILL:	CALL	LARG
	LD	M,C
	PUSH	HL
	XOR	A
	EX	DE,HL
	SBC	HL,DE
	LD	B,H
	LD	C,L
	POP	HL
	LD	D,H
	LD	E,L
	INC	DE
	LDIR
	RET
STCOD:	CMP	32
	JPNC	NKEY2
	LD	HL,NKEY
	PUSH	HL
	LD	B,0
	LD	C,A
	LD	HL,MST
	ADD	HL,BC
	ADD	HL,BC
	LD	C,M
	INC	HL
	LD	B,M
	PUSH	BC
STE1:	RET
ST04:	RET
ST0E:	RET
ST0F:	RET
ST11:	RET
ST12:	RET
ST14:	RET
ST16:	RET
ST17:	RET
ST1B:	RET
ST1C:	RET
ST1D:	RET
ST1E:	EQU	ST0D
ST15:	LD	HL,0EC00H
	CALL	ZLEN
	LD	B,C
SG15:	PUSH	BC
SL15:	LD	A,M
	CMP	32
	JRNC	DRP1-#
	LD	A,32
DRP1:	CMP	080H
	JRC	DRP2-#
	LD	A,'.'
DRP2:	CALL	MT81
	INC	HL
	DJNZ	SL15-#
	POP	BC
	LD	A,01EH
	CALL	MT81
	LD	A,H
	CMP	0F0H
	JRC	SG15-#
	RET
ST01:	LD	DE,MST01
	CALL	PRNST
	RET
ST07:	LD	BC,06024H
	JMP	GTON
ST0B:	LD	HL,(02BH)
	CALL	ZLEN
	OR	A
	SBC	HL,BC
	LD	A,0EBH
	CMP	H
	JRNC	PICD-#
	JMP	STEND
ST13:	LD	HL,(02BH)
	LD	A,L
	AND	0FCH
	LD	L,A
	LD	BC,4
	JR	SC13-#
ST0D:	CALL	ST19
ST0A:	LD	HL,(02BH)
	CALL	ZLEN
SC13:	ADD	HL,BC
	LD	A,0EFH
	CMP	H
	JRC	PICH-#
	JMP	STEND
ST19:	LD	HL,(02BH)
	LD	A,L
	AND	0E0H
	CALL	ZLEN
	JRNC	M32-#
	AND	0C0H
M32:	LD	L,A
	JR	STEND-#
ST18:	CALL	ST19
	ADD	HL,BC
	DEC	HL
	JR	STEND-#
ST02:	CALL	ST19
CLL1:	LD	D,H
	LD	E,L
	INC	DE
	LD	M,32
	DEC	BC
	LDIR
	RET
PICD:	LD	HL,FLAG
	SET	5,M
	LD	HL,0EFFFH
	CALL	ZLEN
	OR	A
	PUSH	BC
	LD	D,H
	LD	E,L
	SBC	HL,BC
	PUSH	HL
	LD	HL,00400H
	SBC	HL,BC
	LD	B,H
	LD	C,L
	POP	HL
	LDDR
	POP	BC
	LD	HL,0EC00H
	JR	CLL1-#
ZLEN:	PUSH	AF
	IN	4
	BIT	7,A
	JRZ	ORGP-#
	LD	BC,64
	POP	AF
	SCF
	RET
ORGP:	LD	BC,32
	POP	AF
	OR	A
	RET
PICH:	CALL	ZLEN
	LD	HL,FLAG
	SET	6,M
	PUSH	BC
	LD	HL,0EC00H
	LD	D,H
	LD	E,L
	ADD	HL,BC
	PUSH	HL
	LD	HL,00400H
	SBC	HL,BC
	LD	B,H
	LD	C,L
	POP	HL
	LDIR
	POP	BC
	LD	HL,0F000H
	SBC	HL,BC
	JR	CLL1-#
ST0C:	LD	HL,0EC00H
	LD	BC,00400H
	CALL	CLL1
ST10:	LD	HL,0EC00H
STEND:	LD	(02BH),HL
	RET
ST08:	LD	HL,(02BH)
	DEC	HL
STDE:	LD	A,0EBH
	CMP	H
	JRC	STEND-#
	CALL	ZLEN
	LD	HL,0EBFFH
	ADD	HL,BC
	LD	(02BH),HL
	JR	PICD-#
ST09:	LD	HL,(02BH)
	INC	HL
	LD	A,0EFH
	CMP	H
	JRNC	STEND-#
	CALL	ZLEN
STHE:	LD	HL,0F000H
	OR	A
	SBC	HL,BC
	LD	(02BH),HL
	JR	PICH-#
ST06:	LD	A,(FLAG)
	XOR	080H
	LD	(FLAG),A
	RET
ZSFR:	LD	A,(FLAG)
	BIT	4,A
	JRZ	ZG1-#
	LD	A,14
	RET
ZG1:	LD	A,32
	RET
ST05:	LD	HL,(02BH)
	LD	A,M
	RES	5,A
	CMP	'A'
	JRC	ST09-#
	CMP	'^'
	JRNC	ST09-#
	LD	A,M
	XOR	020H
	LD	M,A
	JR	ST09-#
ST1A:	LD	HL,(02BH)
	PUSH	HL
	CALL	ST18
	POP	DE
	PUSH	DE
	SBC	HL,DE
	JRNZ	SAG-#
SFNG:	POP	HL
	LD	M,32
	JR	STEND-#
SAG:	LD	B,L
	POP	HL
	PUSH	HL
	LD	A,M
INS:	INC	HL
	LD	C,M
	LD	M,A
	LD	A,C
	DJNZ	INS-#
	JR	SFNG-#
ST1F:	LD	HL,(02BH)
	PUSH	HL
	CALL	ST18
	POP	DE
	PUSH	DE
	SBC	HL,DE
	JRZ	SFNG-#
	LD	B,L
	LD	HL,(02BH)
	LD	A,M
	LD	M,32
DEL:	DEC	HL
	LD	C,M
	LD	M,A
	LD	A,C
	DJNZ	DEL-#
	POP	HL
	JMP	STEND
TAST:	PUSH	HL
	PUSH	BC
NPKB:	LD	HL,(02BH)
	LD	A,M
	LD	(01FH),A
	LD	M,05FH
	CALL	KRE
	LD	HL,01FH
	LD	C,M
	LD	HL,(02BH)
	LD	M,C
	OR	A
	JRNZ	PKB-#
	CALL	KRE
	OR	A
	JRZ	NPKB-#
PKB:	POP	BC
	POP	HL
	RET
KRE:	LD	BC,00700H
IKEY:	RST	020H
	DB	4
	RNZ
	DEC	BC
	OR	B
	OR	C
	RZ
	JR	IKEY-#
INKEY:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	INPK
	LD	(4),A
	OR	A
	POP	BC
	POP	DE
	POP	HL
	RET
GPZ:	IN	A
	CPL
	AND	15
	RET
INPK:	LD	A,15
	LD	C,2
	OUT	8
	LD	HL,027H
	BIT	1,M
	JPNZ	FTAST
INP2:	CALL	GPZ
	JRNZ	TDR-#
	RES	0,M
	RES	7,M
	OUT	8
	RET
TDR:	LD	A,(4)
	OR	A
	JRZ	KREP-#
	BIT	0,M
	JRZ	FREP-#
	LD	B,16
WR3:	LD	D,0
WR2:	DEC	D
	JRNZ	WR2-#
	DJNZ	WR3-#
	JR	KREP-#
FREP:	LD	B,50
WR5:	LD	D,0
WR4:	CALL	GPZ
	JRZ	NTP-#
	DEC	D
	JRNZ	WR4-#
	DJNZ	WR5-#
	SET	0,M
	JR	KREP-#
NTP:	LD	B,4
WR7:	LD	D,0
WR6:	CALL	GPZ
	JRNZ	FREP-#
	DEC	D
	JRNZ	WR6-#
	DJNZ	WR7-#
KREP:	BIT	7,M
	JRNZ	RMAT-#
	LD	B,3
WR9:	LD	D,0
WR8:	CALL	GPZ
	RZ
	DEC	D
	JRNZ	WR8-#
	DJNZ	WR9-#
RMAT:	XOR	A
SPAL:	CMP	7
	JRNZ	SHCT-#
	INC	A
SHCT:	OUT	8
	LD	D,A
	CALL	GPZ
	JRNZ	IDK-#
	LD	A,D
	INC	A
	CMP	12
	JRNZ	SPAL-#
	RES	0,M
NOST:	XOR	A
	RET
IDK:	PUSH	AF
	LD	A,7
	OUT	8
	POP	AF
	SLA	D
	SLA	D
	SLA	D
	DEC	A
	ADD	D
	LD	E,A
	IN	A
	AND	15
	XOR	8
	LD	A,E
	JRNZ	NSHIF-#
	ADD	060H
	LD	E,A
NSHIF:	LD	HL,(043H)
	LD	BC,(041H)
	CPIR
	JRNZ	TNOR-#
STAST:	DEC	HL
	LD	BC,(043H)
	SBC	HL,BC
	SLA	L
	LD	BC,(045H)
	ADD	HL,BC
	LD	C,M
	INC	HL
	LD	H,M
	LD	L,C
	LD	BC,027H
	LD	A,(BC)
	RES	0,A
	BIT	7,A
	JRNZ	NOST-#
	SET	7,A
	LD	(BC),A
	CALL	CLKT
	JMP	M
G100:	LD	SP,0B0H
	LD	HL,00100H
	JMP	GOUT
GRAF:	LD	L,4
	JR	SET27-#
CENT:	LD	L,8
	JR	SET27-#
SHLK:	LD	L,16
	JR	SET27-#
CLICK:	LD	L,32
SET27:	LD	A,(BC)
	XOR	L
	LD	(BC),A
	LD	E,0
	JMP	SETST
TNOR:	LD	HL,(03BH)
	LD	D,0
	ADD	HL,DE
	LD	E,M
	IN	2
	BIT	3,A
	JRNZ	NCTRL-#
	RES	5,E
	RES	6,E
NCTRL:	LD	HL,027H
	BIT	2,M
	JRNZ	NFT-#
	LD	A,E
	CMP	0E0H
	JRC	NFT-#
	LD	HL,(03DH)
	LD	BC,00100H
	SUB	0DFH
	LD	D,A
	XOR	A
CPIR:	DEC	D
	JRZ	KEYF-#
	CPIR
	JR	CPIR-#	
KEYF:	LD	(03FH),HL
	CALL	CLKT
FTAST:	LD	HL,(03FH)
	LD	A,M
	INC	HL
	LD	(03FH),HL
	LD	HL,027H
	SET	1,M
	OR	A
	RNZ	
	RES	1,M
	JMP	FREP
NFT:	CALL	CLKT
	LD	HL,027H
	LD	A,E
	BIT	2,M
	JRZ	NGR-#
	CMP	8
	JRC	GADD-#
	CMP	12
	JRC	NGR-#
GADD:	ADD	080H
NGR:	LD	E,A
	BIT	4,M
	JRZ	NSLK-#
	AND	05FH
	CMP	041H
	JRC	NSLK-#
	CMP	05EH
	JRNC	NSLK-#
	LD	A,E
	XOR	020H
	LD	E,A
NSLK:	SET	7,M
	JR	NSLED-#
BEEP:	PUSH	BC
BE2:	PUSH	BC
	LD	A,C
	OR	A
	LD	A,15
	JRZ	SBAN-#
	LD	A,14
SBAN:	OUT	8
	POP	BC
	PUSH	BC
BAN:	DEC	C
	JRNZ	BAN-#
	LD	A,15
	OUT	8
	POP	BC
	PUSH	BC
BAUS:	DEC	C
	JRNZ	BAUS-#
	POP	BC
	DJNZ	BE2-#
	POP	BC
SETST:	PUSH	HL
	LD	HL,027H
	LD	A,14
	OUT	8
	BIT	3,M
	JRZ	NPLED-#
	LD	A,12
	OUT	8
NPLED:	BIT	4,M
	POP	HL
	JRZ	NSLED-#
	LD	A,13
	OUT	8
NSLED:	LD	A,7
	OUT	8
	LD	A,E
	RET
CLKT:	PUSH	BC
	LD	BC,08008H
	LD	A,(027H)
	BIT	5,A
	CANZ	GTON
	POP	BC
	RET
;
;  ***  DATEN UND TEXTE       ***
;
LSON:	EQU	10
SONK:	HEX	35,95,1F,7F,18,78,5F,BF
	HEX	FF,FF
SONKT:	DA	SHLK
	DA	SHLK
	DA	GRAF
	DA	GRAF
	DA	CLICK
	DA	CLICK
	DA	CENT
	DA	CENT
	DA	G100
	DA	G100
KEYS:	HEX	0B,08,00,0A,00,00,00,20
	HEX	E6,09,03,1B,0C,1E,54,1C
	HEX	0D,02,27,1F,13,E5,15,04
	HEX	14,05,34,40,5F,37,E2,0F
	HEX	4A,49,48,47,46,45,44,43
	HEX	5A,59,58,57,56,55,1D,53
	HEX	3B,5D,5B,0E,3D,16,39,38
	HEX	00,00,00,00,00,00,00,00
	HEX	00,36,35,00,33,32,31,30
	HEX	52,51,50,4F,4E,4D,4C,4B
	HEX	42,41,E8,2F,2E,2C,1A,5C
	HEX	E3,E0,E1,E7,E4,17,06,11
;
	HEX	10,19,00,0A,00,00,00,7F
	HEX	EF,18,03,1B,0C,1E,74,1C
	HEX	0D,01,7E,1F,13,EE,15,04
	HEX	14,05,24,60,2D,26,EB,0F
	HEX	6A,69,68,67,66,65,64,63
	HEX	7A,79,78,77,76,75,1D,73
	HEX	3A,7D,7B,0E,2B,16,28,2A
	HEX	00,00,00,00,00,00,00,00
	HEX	00,5E,25,00,23,22,21,29
	HEX	72,71,70,6F,6E,6D,6C,6B
	HEX	62,61,F1,3F,3E,3C,1A,7C
	HEX	EC,E9,EA,F0,ED,17,06,11
TEXTM:	DB	12,'* Z1013 '
	DB	'DOS 1.2 *'
CRL:	DB	13,'%',0
MSHW:	DB	2,11,0
ERM1:	DB	'not under'
	DB	'standable'
	DB	13,7,0
ERM2:	DB	'not found'
	DB	13,7,0
MKEY:	DB	2,'%LOAD',13
	DB	0
	DB	2,'%SAVE :',13
	DB	0
	DB	'LIST '
	DB	0
	DB	'?AT('
	DB	0
	DB	'GOSUB'
	DB	0
	DB	'RETURN'
	DB	0
	DB	'WINDOW'
	DB	0
	DB	'EDIT '
	DB	0
	DB	2,'DLOAD',13
	DB	0
	DB	'WINDOW:'
	DB	'CLS',13,0
EKEY:	DB	0
MST01:	DB	8,32,8,0
KEYM2:	DB	' : '
	DB	0
MST:	DA	STE1
	DA	ST01
	DA	ST02
	DA	STE1
	DA	ST04
	DA	ST05
	DA	ST06
	DA	ST07
	DA	ST08
	DA	ST09
	DA	ST0A
	DA	ST0B
	DA	ST0C
	DA	ST0D
	DA	ST0E
	DA	STE1
	DA	ST10
	DA	ST11
	DA	ST12
	DA	ST13
	DA	ST14
	DA	ST15
	DA	ST16
	DA	ST17
	DA	ST18
	DA	ST19
	DA	ST1A
	DA	ST1B
	DA	ST1C
	DA	ST1D
	DA	ST1E
	DA	ST1F
MFKT:	DA	DRKEY
	DA	TAST
	DA	PRST7
	DA	INHEX
	DA	INKEY
	DA	INLM
	DA	AHEX
	DA	HLHEX
	DA	VMON
	DA	VMON
;
	DA	MODIF
	DA	WIND
	DA	OTHLS
	DA	OUTDP
	DA	OUTSP
	DA	TRANS
	DA	INLIN
	DA	KILL
	DA	VMON
	DA	VMON
;
MODIF:	RET
WIND:	RET
	DB	STMEB
	DB	STMEB
	DB	'MENU'
	DB	1
	LD	SP,0B0H
	CALL	ADRM
MENU:	LD	DE,TEXTM
	CALL	PRNST
	LD	A,0EEH
	LD	(JPM),A
	CALL	SUCH
	JMP	INPUT
	DB	'  ***   '
;
;  ***	ORG	0FFB8H  ***
;
SRT:	RET
ESPV:	JMP	SRT
	JMP	SRT
	JMP	SRT
	JMP	SRT
	JMP	SRT
;
	JMP	SRT
	JMP	SRT
	JMP	SRT
	JMP	SRT
	JMP	SRT
;
	JMP	SRT
	JMP	SRT
GTON:	JMP	BEEP
	JMP	SRT
	JMP	SRT
;
	JMP	SRT
MT81:	JMP	DRAKK
	JMP	SRT
	JMP	SRT
	JMP	SRT
;
	JMP	SRT
	JMP	SRT
	JMP	SRT
	JMP	SRT
	END
;
	END
ï„£ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿ï‡¿